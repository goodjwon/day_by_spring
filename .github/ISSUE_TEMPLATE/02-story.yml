name: 📖 Story
description: 사용자 관점의 기능을 위한 Story 이슈
title: "[STORY] "
labels: ["story"]
projects: ["day-by-spring"]
body:
  - type: markdown
    attributes:
      value: |
        # 📚 Story Issue Template
        
        사용자 관점에서의 기능을 정의하고 관리하기 위한 템플릿입니다.

  - type: input
    id: parent-epic
    attributes:
      label: "📊 Epic"
      description: "이 Story가 속하는 Epic 번호를 입력하세요"
      placeholder: "예: [EPIC] 도서 관리 시스템 구현 (#5)"
    validations:
      required: true

  - type: dropdown
    id: status
    attributes:
      label: "📊 상태"
      description: "Story의 현재 상태"
      options:
        - "🔄 진행중"
        - "⏳ 대기중"
        - "✅ 완료"
        - "🚫 중단"
    validations:
      required: true

  - type: input
    id: progress
    attributes:
      label: "📈 진행률"
      description: "Story 완료 진행률"
      placeholder: "예: (60% 완료)"

  - type: dropdown
    id: priority
    attributes:
      label: "🔥 우선순위"
      description: "Story의 우선순위를 선택하세요"
      options:
        - "🔥 Critical"
        - "🟡 High"
        - "🟢 Medium"
        - "🔵 Low"
    validations:
      required: true

  - type: input
    id: assignee
    attributes:
      label: "👤 담당자"
      description: "Story 담당자"
      placeholder: "예: TBD"

  - type: textarea
    id: story-description
    attributes:
      label: "📝 Story 설명"
      description: "Story의 구체적인 내용과 요구사항을 설명하세요"
      placeholder: |
        도서의 기본적인 생성, 조회, 수정, 삭제 기능을 구현합니다.
        ISBN 기반 도서 등록과 재고 관리 기능을 포함합니다.
    validations:
      required: true

  - type: textarea
    id: acceptance-criteria
    attributes:
      label: "🎯 인수 조건 (Acceptance Criteria)"
      description: "Story가 완료되었다고 판단할 수 있는 구체적인 조건들"
      placeholder: |
        - [ ] 도서 등록 API (`POST /api/books`)
        - [ ] 도서 단건 조회 API (`GET /api/books/{id}`)
        - [ ] 도서 목록 조회 API (`GET /api/books`)
        - [ ] 도서 정보 수정 API (`PUT /api/books/{id}`)
        - [ ] 도서 삭제 API (`DELETE /api/books/{id}`) - Soft Delete
        - [ ] ISBN 중복 검증
    validations:
      required: true

  - type: textarea
    id: related-tasks
    attributes:
      label: "📋 관련 Task Issues"
      description: "이 Story에 포함될 Task들을 나열하세요"
      placeholder: |
        - [ ] Book Entity 설계 및 구현
        - [ ] BookRepository 인터페이스 구현
        - [ ] BookService 비즈니스 로직 구현
        - [ ] BookController REST API 구현
        - [ ] 도서 검증 및 예외 처리

  - type: textarea
    id: definition-of-done
    attributes:
      label: "✅ Definition of Done"
      description: "Story가 완료되었다고 판단할 수 있는 조건들"
      placeholder: |
        - [ ] 모든 CRUD API 구현 완료
        - [ ] ISBN 검증 로직 구현
        - [ ] Soft Delete 처리 완료
        - [ ] Unit/Integration 테스트 작성
        - [ ] API 문서화 완료
    validations:
      required: true